{
  "ignored_warnings": [
    {
      "warning_type": "Redirect",
      "warning_code": 18,
      "fingerprint": "29914a5ab2e071e86f64854c9a7e76f0acc29b98485c33f42817d8cf6c5d1d69",
      "check_name": "Redirect",
      "message": "Possible unprotected redirect",
      "file": "app/controllers/public/home_controller.rb",
      "line": 70,
      "link": "https://brakemanscanner.org/docs/warning_types/redirect/",
      "code": "redirect_to(Payment.new(:description => I18n.t(\"form.introduction\", :user => Member.new(public_post_params.except(:participant_attributes)).name), :amount => (0 + Participant.create(:member => Member.new(public_post_params.except(:participant_attributes)), :activity => activity).currency), :issuer => params[:bank], :member => Member.new(public_post_params.except(:participant_attributes)), :transaction_id => Activity.find(public_post_params[:participant_attributes].to_h.select do\n (participant[\"participate\"].nil? or (participant[\"participate\"].to_b == true))\n end.map do\n participant[\"id\"].to_i\n end).map(&:id), :transaction_type => :activity, :payment_type => :ideal, :redirect_uri => public_url).payment_uri)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Public::HomeController",
        "method": "create"
      },
      "user_input": "Payment.new(:description => I18n.t(\"form.introduction\", :user => Member.new(public_post_params.except(:participant_attributes)).name), :amount => (0 + Participant.create(:member => Member.new(public_post_params.except(:participant_attributes)), :activity => activity).currency), :issuer => params[:bank], :member => Member.new(public_post_params.except(:participant_attributes)), :transaction_id => Activity.find(public_post_params[:participant_attributes].to_h.select do\n (participant[\"participate\"].nil? or (participant[\"participate\"].to_b == true))\n end.map do\n participant[\"id\"].to_i\n end).map(&:id), :transaction_type => :activity, :payment_type => :ideal, :redirect_uri => public_url).payment_uri",
      "confidence": "High",
      "note": "Have to redirect for payment"
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "3b8d54ccdfe03e13e9d1cd35e1640ed0a68e7505d339a35e79d8d25b531e6775",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped model attribute",
      "file": "app/views/mailings/participants/inform.html.haml",
      "line": 18,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "current_user.credentials.signature",
      "render_path": null,
      "location": {
        "type": "template",
        "template": "mailings/participants/inform"
      },
      "user_input": "current_user.credentials.signature",
      "confidence": "Weak",
      "note": "The admins can defs put code in their signature, we kinda trust our admins not to do this though"
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "49b99fb6bf70bc433c99ac49400e2a8fb485000efde1696fc26e8bfd9e69e1aa",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped model attribute",
      "file": "app/views/admin/members/edit.html.haml",
      "line": 73,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "I18n.t(:unconfirmed_email, :scope => \"activerecord.messages.member\", :email => Member.includes(:educations).includes(:tags).find(params[:id]).user.unconfirmed_email, :link => member_force_email_change_path(Member.includes(:educations).includes(:tags).find(params[:id])))",
      "render_path": [
        {
          "type": "controller",
          "class": "Admin::MembersController",
          "method": "edit",
          "line": 73,
          "file": "app/controllers/admin/members_controller.rb",
          "rendered": {
            "name": "admin/members/edit",
            "file": "app/views/admin/members/edit.html.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "admin/members/edit"
      },
      "user_input": "Member.includes(:educations).includes(:tags)",
      "confidence": "Weak",
      "note": "We kinda trust our admins to not put code in an emailadress"
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "7627b4a6d06014a919a69d798701940bc0938376d285cc17e9d6dbfde550f778",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/checkout_transaction.rb",
      "line": 24,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "CheckoutBalance.where(:id => checkout_balance.id).limit(1).update_all(\"balance = balance + #{price}, updated_at = NOW()\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "CheckoutTransaction",
        "method": null
      },
      "user_input": "price",
      "confidence": "Medium",
      "note": "price is already validated beforehand"
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "8506deaed7b8bffade415a45e77365d8ad85c8a1827d26de4da2690c759f1cb3",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped model attribute",
      "file": "app/views/admin/settings/index.html.haml",
      "line": 165,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "current_user.credentials.signature",
      "render_path": [
        {
          "type": "controller",
          "class": "Admin::SettingsController",
          "method": "index",
          "line": 12,
          "file": "app/controllers/admin/settings_controller.rb",
          "rendered": {
            "name": "admin/settings/index",
            "file": "app/views/admin/settings/index.html.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "admin/settings/index"
      },
      "user_input": "current_user.credentials.signature",
      "confidence": "Weak",
      "note": "The admins can defs put code in their signature, we kinda trust our admins not to do this though"
    },
    {
      "warning_type": "Redirect",
      "warning_code": 18,
      "fingerprint": "8c08dc71a8af936322aef7b0bb64fade45df68eaa90f7a0b077ed739749e8f00",
      "check_name": "Redirect",
      "message": "Possible unprotected redirect",
      "file": "app/controllers/api/webhook_controller.rb",
      "line": 13,
      "link": "https://brakemanscanner.org/docs/warning_types/redirect/",
      "code": "redirect_to(Payment.find_by_token!(params[:token]).redirect_uri)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Api::WebhookController",
        "method": "payment_redirect"
      },
      "user_input": "Payment.find_by_token!(params[:token]).redirect_uri",
      "confidence": "High",
      "note": "Required to validate transaction after coming back from the payment provider"
    },
    {
      "warning_type": "Redirect",
      "warning_code": 18,
      "fingerprint": "9cc91332d5d2f54e3ae1b67048c6d1f5bc8a5fc6b55f64c789d04124b7d7a73f",
      "check_name": "Redirect",
      "message": "Possible unprotected redirect",
      "file": "app/controllers/admin/payments_controller.rb",
      "line": 44,
      "link": "https://brakemanscanner.org/docs/warning_types/redirect/",
      "code": "redirect_to(\"https://web.whatsapp.com/send?phone=#{Member.find(params[:member_id]).phone_number}&text=#{ERB::Util.url_encode(render_to_string(:template => \"admin/members/payment_whatsapp.html.haml\", :layout => false, :content_type => \"text/plain\"))}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Admin::PaymentsController",
        "method": "whatsapp_redirect"
      },
      "user_input": "Member.find(params[:member_id]).phone_number",
      "confidence": "High",
      "note": "Have to redirect to whatsapp for this function"
    },
    {
      "warning_type": "Mass Assignment",
      "warning_code": 70,
      "fingerprint": "b80db455c4dd1ca640177dd5c9d1232eb638dbc2d29f46aababbaad11458f04f",
      "check_name": "MassAssignment",
      "message": "Parameters should be whitelisted for mass assignment",
      "file": "app/controllers/admin/participants_controller.rb",
      "line": 52,
      "link": "https://brakemanscanner.org/docs/warning_types/mass_assignment/",
      "code": "params[:recipients].permit!",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Admin::ParticipantsController",
        "method": "mail"
      },
      "user_input": null,
      "confidence": "Medium",
      "note": "The mass-assignment only is used to map over, the emailadresses will be checked later anyway"
    },
    {
      "warning_type": "Redirect",
      "warning_code": 18,
      "fingerprint": "c835e07589b98566ac2f66d3ec01193aafad3ec381ded00e4430f2001ba489c7",
      "check_name": "Redirect",
      "message": "Possible unprotected redirect",
      "file": "app/controllers/members/payments_controller.rb",
      "line": 103,
      "link": "https://brakemanscanner.org/docs/warning_types/redirect/",
      "code": "redirect_to(Payment.new(:description => I18n.t(\"activerecord.errors.models.payment.attributes.checkout\"), :amount => transaction_params[:amount].gsub(\",\", \".\").to_f, :member => Member.find(current_user.credentials_id), :issuer => (if (transaction_params[:payment_type] == \"Ideal\") then\n  transaction_params[:bank]\nelse\n  nil\nend), :payment_type => (if (transaction_params[:payment_type] == \"Payconiq\") then\n  :payconiq_online\nelse\n  :ideal\nend), :transaction_id => nil, :transaction_type => :checkout, :redirect_uri => member_payments_path).payment_uri)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Members::PaymentsController",
        "method": "add_funds"
      },
      "user_input": "Payment.new(:description => I18n.t(\"activerecord.errors.models.payment.attributes.checkout\"), :amount => transaction_params[:amount].gsub(\",\", \".\").to_f, :member => Member.find(current_user.credentials_id), :issuer => (if (transaction_params[:payment_type] == \"Ideal\") then\n  transaction_params[:bank]\nelse\n  nil\nend), :payment_type => (if (transaction_params[:payment_type] == \"Payconiq\") then\n  :payconiq_online\nelse\n  :ideal\nend), :transaction_id => nil, :transaction_type => :checkout, :redirect_uri => member_payments_path).payment_uri",
      "confidence": "High",
      "note": "Have to redirect users to Ideal or Payconiq"
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 106,
      "fingerprint": "c8adc1c0caf2c9251d1d8de588fb949070212d0eed5e1580aee88bab2287b772",
      "check_name": "SanitizeMethods",
      "message": "loofah gem 2.11.0 is vulnerable (CVE-2018-8048). Upgrade to 2.2.1",
      "file": "Gemfile.lock",
      "line": 151,
      "link": "https://github.com/flavorjones/loofah/issues/144",
      "code": null,
      "render_path": null,
      "location": null,
      "user_input": null,
      "confidence": "Medium",
      "note": "Brakeman parses version numbers incorrectly, thinking version 2.11.0 is equal to 2.1.1. The currently installed version of loofah is not vulnerable to CVE listed."
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "d2be482c78d4a736657a4132006c3abdc2cec2c7ae240313e8adaf682346654b",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped model attribute",
      "file": "app/views/admin/members/show.html.haml",
      "line": 22,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "I18n.t(:unconfirmed_email, :scope => \"activerecord.messages.member\", :email => Member.find(params[:id]).user.unconfirmed_email)",
      "render_path": [
        {
          "type": "controller",
          "class": "Admin::MembersController",
          "method": "show",
          "line": 37,
          "file": "app/controllers/admin/members_controller.rb",
          "rendered": {
            "name": "admin/members/show",
            "file": "app/views/admin/members/show.html.haml"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "admin/members/show"
      },
      "user_input": "Member.find(params[:id]).user",
      "confidence": "Weak",
      "note": "Again we kind trust our admins here"
    },
    {
      "warning_type": "Redirect",
      "warning_code": 18,
      "fingerprint": "e32d4cbb69ef97fc2e4fb8181665be8ba6b53173a4b253c2a58ea90c3e9ff199",
      "check_name": "Redirect",
      "message": "Possible unprotected redirect",
      "file": "app/controllers/members/payments_controller.rb",
      "line": 44,
      "link": "https://brakemanscanner.org/docs/warning_types/redirect/",
      "code": "redirect_to(Payment.new(:description => (\"#{\"Activiteiten - \"}#{self.class.join_with_char_limit(Participant.where(:activity_id => params[:activity_ids], :member => Member.find(current_user.credentials_id), :reservist => false).joins(:activity).where(:activities => ({ :is_payable => true })).map do\n p.activity.name\n end, \", \", (140 - \"Activiteiten - \".length))}\"), :amount => Participant.where(:activity_id => params[:activity_ids], :member => Member.find(current_user.credentials_id), :reservist => false).joins(:activity).where(:activities => ({ :is_payable => true })).sum(&:currency), :issuer => (if (transaction_params[:payment_type] == \"Ideal\") then\n  transaction_params[:bank]\nelse\n  nil\nend), :member => Member.find(current_user.credentials_id), :payment_type => (if (transaction_params[:payment_type] == \"Payconiq\") then\n  :payconiq_online\nelse\n  :ideal\nend), :transaction_id => Participant.where(:activity_id => params[:activity_ids], :member => Member.find(current_user.credentials_id), :reservist => false).joins(:activity).where(:activities => ({ :is_payable => true })).pluck(:activity_id), :transaction_type => :activity, :redirect_uri => member_payments_path).payment_uri)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Members::PaymentsController",
        "method": "pay_activities"
      },
      "user_input": "Payment.new(:description => (\"#{\"Activiteiten - \"}#{self.class.join_with_char_limit(Participant.where(:activity_id => params[:activity_ids], :member => Member.find(current_user.credentials_id), :reservist => false).joins(:activity).where(:activities => ({ :is_payable => true })).map do\n p.activity.name\n end, \", \", (140 - \"Activiteiten - \".length))}\"), :amount => Participant.where(:activity_id => params[:activity_ids], :member => Member.find(current_user.credentials_id), :reservist => false).joins(:activity).where(:activities => ({ :is_payable => true })).sum(&:currency), :issuer => (if (transaction_params[:payment_type] == \"Ideal\") then\n  transaction_params[:bank]\nelse\n  nil\nend), :member => Member.find(current_user.credentials_id), :payment_type => (if (transaction_params[:payment_type] == \"Payconiq\") then\n  :payconiq_online\nelse\n  :ideal\nend), :transaction_id => Participant.where(:activity_id => params[:activity_ids], :member => Member.find(current_user.credentials_id), :reservist => false).joins(:activity).where(:activities => ({ :is_payable => true })).pluck(:activity_id), :transaction_type => :activity, :redirect_uri => member_payments_path).payment_uri",
      "confidence": "High",
      "note": "Have to redirect users to Ideal or payconiq"
    }
  ],
  "updated": "2021-12-02 21:55:48 +0100",
  "brakeman_version": "4.8.2"
}
