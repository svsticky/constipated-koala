- content_for(:page, 'home')

.row
  .col-md-8
    - @pinned.each do |post|
      .card
        .card-header{class: ('avatar-padding' if post.author.avatar.attached?)}
          - if post.author.avatar.attached?
            = image_tag post.author.avatar_representation, class: 'avatar'
          %h4= post.author.name
          %ul
            %li= I18n.l(post.published_at, format: "%d %B %H:%m")

            - if post.pinned?
              %li.bold pinned

            - post.tags&.each do |tag|
              %li= tag
        .card-body.content
          = raw post.content

    .card.d-block.d-md-none
      .card-body.debt-card
        %i.fas.fa-calendar-week.fa-2x
        %span= number_to_currency(@debt, :precision => 2, :unit => '€ ', separator: ',', delimiter: '.')
        %p= I18n.t('activerecord.models.checkout_balance')

    - unless @balance.blank?
      .card.card-box
        .row.no-gutters
          .col.bg-success.card-body
            %i.fa.fa-shopping-cart.fa-5x
          .col.card-body
            %p.size-h2
              = number_to_currency( @balance.balance, :unit => '€' )
            %p.text-muted.text-center= I18n.t('activerecord.models.checkout_balance')

    .card.card-box
      .row.no-gutters
        .col.card-body
          %p.size-h2
            = number_to_currency( @debt, :unit => '€' )
          %p.text-muted.text-center= I18n.t('members.home.index.outstanding_payments')
        .col.bg-warning.card-body
          %i.fa.fa-ticket-alt.fa-5x

    - if @member.groups.any?
      .widget
        .card
          .card-header
            %i.fa.fa-fw.fa-users
            = I18n.t('activerecord.models.group')
          %table.table.card-body
            %tbody
              - @member.groups.each do |group|
                %tr
                  %td
                    %strong
                      = group[ :name ]
                  %td= Date.years( group[ :years ].sort )

                  %td
                    - group[ :positions ].each do | position |
                      - position.each do | position, year |
                        - unless position.nil?
                          %span{:class => year == Date.today.study_year ? "font-weight-bold" : ""}=                          |
                            I18n.t(position, scope: 'activerecord.attributes.group.positions', default: position.capitalize) |


  .col-lg-6.col-12.float-right
    .card
      .card-header
        %span
          %i.fa.fa-fw.fa-fw.fa-ticket-alt
          = I18n.t("navigation.activity")
          = select_tag :year, options_for_select( @years), class: 'year-selector'
      %table.table.table-striped
        %tbody
          - @participants.each do |activity|
            %tr{ :class => ('red' unless activity.currency(@member).nil? || activity.currency(@member) == 0 || activity.participants.where(:member => @member).first.paid)}
              - if !activity.ended?
                %td= link_to activity.name, activity_path(activity)
              - else
                %td= activity.name

              - if !activity.start_date.nil?
                %td.hidden-xs
                  - if activity.end_date.nil?
                    = I18n.l activity.start_date
                  - else
                    #{I18n.l activity.start_date} - #{I18n.l activity.end_date}
              - if !activity.currency(@member).nil?
                %td= number_to_currency(activity.currency(@member), :unit => '€')
              - else
                %tdl
              %td.text-center.d-none.d-sm-block
                - if !activity.currency(@member).nil? && activity.currency(@member) > 0
                  - if activity.participants.where(:member => @member).first.paid
                    %span.label.label-success= I18n.t('activerecord.attributes.participant.paid.true')
                  - else
                    %span.label.label-warning= I18n.t('activerecord.attributes.participant.paid.false')
    .card
      .card-header
        %i.fa.fa-fw.fa-fw.fa-shopping-cart
        %span= I18n.t("activerecord.models.checkout_transactions")
      %table.table.card-body
        %tbody
          - @transactions.each do |transaction|
            %tr
              %td.d-block.d-sm-none{ :colspan => 2 }= I18n.l transaction.created_at
              %td.d-none.d-sm-table-cell= I18n.l transaction.created_at
              %td.d-none.d-sm-table-cell= transaction.products
              %td
                = number_to_currency(transaction.price, :unit => '€')
                - if transaction.price > 0
                  %span.fa.fa-sort-asc.float-right
                - else
                  %span.fa.fa-sort-desc.float-right
