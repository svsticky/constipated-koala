- content_for(:page, 'member_payments')
- if flash[:notice]
  .alert.alert-success
    %span= flash[:notice]
- if flash[:warning]
  .alert.alert-warning
    %span= flash[:warning]
.row
  .col-lg-6.col-12
    .card
      = form_with :url => :pay_activities, :local => true, :method=> :post, :class => 'form-validation', :id => "pay_activities_form" do |f|
        .card-header
          .mb-2
            %i.fa.fa-fw.fa-ticket-alt
            = I18n.t("members.payments.unpaid_activity.title")
          .card-subtitle.text-muted
            = I18n.t("members.payments.unpaid_activity.subtitle")
        .card-body
          %table.table
            - if !@participants.empty?
              %thead
                %tr
                  %th
                    = check_box_tag 'check_all_activities'
                  %th.col-6
                    = I18n.t("members.payments.unpaid_activity.header.name")
                  %th.col-6.d-none.d-xl-table-cell
                    = I18n.t("members.payments.unpaid_activity.header.date")
                  %th.col-6
                    = I18n.t("members.payments.unpaid_activity.header.price")
              %tfoot
                %tr
                  %td
                  %td
                  %td
                  %td
                %tr
                  %td
                  %td
                    = I18n.t("members.payments.unpaid_activity.footer.paymentmethod")
                    .float-xl-right
                      =f.select :payment_type, [["Payconiq +€#{String(@payconiq_transaction_costs)}", 'Payconiq'],["Ideal +€#{String(@transaction_costs)}", 'Ideal']], {},{:id => 'payment_type_pay_activities'}
                  %td.d-none.d-xl-table-cell
                    = I18n.t("members.payments.unpaid_activity.footer.subtotal")
                  %td#subtotal_activities
                %tr
                  %td
                  %td
                    .ideal-activities
                      =I18n.t("members.payments.unpaid_activity.footer.bank")
                      .float-xl-right= f.select :bank, options_for_select(Payment::ideal_issuers), {}, {style: '', class:'ideal-activities'}
                  %td.d-none.d-xl-table-cell
                    = I18n.t("members.payments.unpaid_activity.footer.transactioncosts")
                  %td#transaction_cost_activities
                    %span.transaction_cost_activities.ideal-activities{:price =>@transaction_costs}= number_to_currency(@transaction_costs, :unit => '€')
                    %span.transaction_cost_activities.payconiq-activities{:price =>@payconiq_transaction_costs}= number_to_currency(@payconiq_transaction_costs, :unit => '€')
                %tr
                  %td.d-none.d-xl-table-cell
                  %td  
                  %td
                    %strong= I18n.t("members.payments.unpaid_activity.footer.total")
                  %td#total_activities
                %tr
                  %td
                  %td 
                  %td
                    = f.submit I18n.t("members.payments.unpaid_activity.pay"), class: 'button btn btn-success btn-sm activity-payment', type: "submit"
                  %td
              %tbody
                - @participants.each do |activity|
                  %tr
                    %td
                      = check_box_tag "activity_ids[]", activity.id, true, {:class => "activity_checkbox"}
                    - if !activity.ended?
                      %td= link_to activity.name, activity_path(activity)
                    - else
                      %td= activity.name

                    - if !activity.start_date.nil?
                      %td.d-none.d-xl-table-cell
                        - if activity.end_date.nil?
                          = I18n.l activity.start_date
                        - else
                          #{I18n.l activity.start_date} - #{I18n.l activity.end_date}
                    - if !activity.currency(@member).nil?
                      %td.price{:price =>(activity.currency(@member))}= number_to_currency(activity.currency(@member), :unit => '€')
                    - else
                      %tdl
            - else
              %tr.card-bodyity.no_unpaid")

  .col-lg-6.col-12
    .card
      = form_with :url => :mongoose, :local => true, :method=> :post, :class => 'form-validation', :id => "add_funds_form" do |f|
        .card-header
          .mb-2
            %i.fa.fa-fw.fa-fw.fa-shopping-cart
            %span= I18n.t("activerecord.models.checkout_transactions")
          .card-subtitle.text-muted
            = I18n.t("members.payments.mongoose.subtitle")
        .card-body
          %table.table
            %tbody
              - @transactions.each do |transaction|
                %tr
                  %td{ :colspan => 1 }= I18n.l transaction.created_at
                  %td.d-none.d-sm-table-cell= transaction.products
                  %td
                    = number_to_currency(transaction.price, :unit => '€')
                    - if transaction.price > 0
                      %span.fa.fa-sort-asc.float-right
                    - else
                      %span.fa.fa-sort-desc.float-right
                  %td.d-table-cell.d-sm-table-cell
              %tr
                %td
                %td
                %td
              %tr
                %td.home_mongoose_form_element= I18n.t("members.payments.unpaid_activity.footer.paymentmethod")
                %td.home_mongoose_form_element
                  = f.select :payment_type, [["Payconiq +€#{String(@payconiq_transaction_costs)}", 'Payconiq'],["Ideal +€#{String(@transaction_costs)}", 'Ideal']], {}, { :id => 'payment_type_add_funds' }
                %td.home_mongoose_form_element
              %tr
                %td.home_mongoose_form_element
                  .ideal-mongoose= f.select :bank, options_for_select(Payment::ideal_issuers), {}
                %td.home_mongoose_form_element
                  = f.text_field :amount, :placeholder => I18n.t('members.payments.mongoose.credit'), :pattern => '^\d+(\.|\,)\d{2}$', 'data-toggle' => 'tooltip', :required => ''
                %td.home_mongoose_form_element
                  = f.submit I18n.t('members.payments.mongoose.upgrade'), class: "btn btn-success btn-sm", type: "submit"