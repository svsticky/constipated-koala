- content_for(:page, 'members')
- content_for(:title, "#{I18n.t('admin.members.title')} | #{@member.name}")

%section#content
  = render 'layouts/partials/search'

  .page{ :data => { 'authenticity_token' => form_authenticity_token}}
    .row

      %div
        - if flash['errors'].present?
          .col-md-12
            .alert.alert-danger
              %span= I18n.t('activerecord.errors.default')
              %ul
              - flash['errors'].each do |attr, msg|
                %li= msg.first

      .col-lg-6
        - if @member.user && @member.user.unconfirmed_email
          .callout.callout-warning
            = I18n.t('activerecord.messages.member.confirmation_sent')
            %b
              = @member.user.unconfirmed_email
            = I18n.t('activerecord.messages.member.once_confirmed')
            = raw I18n.t( :force_unconfirmed_email, scope: 'activerecord.messages.member', link: member_force_email_change_path(@member) )

        .card
          .card-header
            %i.fa.fa-fw.fa-user
            = I18n.t('members.home.edit.general_data')
          .card-body
            - if flash[:success].present?
              %p.alert.alert-success{ :style => 'margin: 0px;'}
                = flash[:success]

            %p
              %strong= @member.name
              %br
              - if !@member.birth_date.nil?
                = I18n.l @member.birth_date
            %p
              #{@member.address} #{@member.house_number}
              %br
              #{@member.postal_code} #{@member.city}
            %p
              #{@member.phone_number}
              %br
              #{@member.emergency_phone_number}
              %br
              #{@member.email}
            - if current_user.admin?
              %p= @member.comments

            - if @member.user
              - if @member.user.confirmed?
                %p= I18n.t 'admin.member_account_status.active_user', email: @member.user.email

              - else
                %strong= I18n.t 'admin.member_account_status.user_not_activated', email: @member.user.email

            - else
              %p= I18n.t 'admin.member_account_status.no_user'

            - @member.tags.each do |tag|
              .btn.btn-xs.btn-primary.disabled
                %i.fa.fa-fw.fa-tag
                = I18n.t( tag.name, scope: 'activerecord.attributes.tag.names' )

        .card
          .card-header
            %i.fa.fa-fw.fa-graduation-cap
            = I18n.t('admin.members.study_info')
          .card-body
            %dl.dl-horizontal
              %dt
                = I18n.t('admin.members.student_number')
              %dd= @member.student_id
              %dt
                = I18n.t('admin.members.since')
              - if !@member.join_date.nil?
                %dd= I18n.l @member.join_date

            %dl.dl-horizontal
              - @member.educations.each do |education|
                %dt= I18n.t education.study.code.downcase, scope: 'activerecord.attributes.study.names'
                %dd
                  - if education.end_date.nil?
                    #{I18n.l education.start_date, :format => :short}
                  - else
                    #{I18n.l education.start_date, :format => :short}  -  #{I18n.l education.end_date, :format => :short}

                  - if education.graduated?
                    %span.label.label-success
                      = I18n.t('activerecord.attributes.education.status.graduated')
                  - elsif education.stopped?
                    %span.label.label-warning
                      = I18n.t('activerecord.attributes.education.status.stopped')
                  - elsif education.active?
                    %span.label.label-info
                      = I18n.t('activerecord.attributes.education.status.active')

            %dl.dl-horizontal
              %dt= I18n.t('admin.members.mailinglists')
              - unless ENV['MAILCHIMP_DATACENTER'].blank? || @member.mailchimp_interests.nil?
                %dd= @member.mailchimp_interests&.select{ |_,v| v == true}&.map{ |k, _| Rails.configuration.mailchimp_interests.key(k) }&.join(', ')
              - else
                %dd= I18n.t('admin.members.not_in_mailchimp')


        .card
          .card-body
            .btn-group
              = link_to I18n.t('editing.cancel'), :back, { :class => 'btn btn-primary' }
              = link_to I18n.t('editing.edit'), edit_member_path(@member.id), { :class => 'btn btn-warning' }

            .btn-group
              %button.btn.btn-primary.dropdown-toggle{ 'data-toggle' => 'dropdown', :type => 'button' }
                %i.fa.fa-paper-plane
                = I18n.t 'admin.member_account_status.send_mail'
                %span.caret

              %ul.dropdown-menu
                - if @member.user&.confirmed?
                  %li
                    = link_to member_mail_path(@member, 'password_reset'), method: :post, :class => 'dropdown-item' do
                      = I18n.t 'admin.member_account_status.send_password_reset'

                - elsif @member.user && !@member.user.confirmed?
                  %li
                    = link_to member_mail_path(@member, 'resend_confirmation'), method: :post, :class => 'dropdown-item' do
                      = I18n.t 'admin.member_account_status.resend_confirmation'
                - else
                  %li
                    = link_to member_mail_path(@member, 'create_user'), method: :post, :class => 'dropdown-item' do
                      = I18n.t 'admin.member_account_status.send_create_email'

                %li
                  = link_to member_mail_path(@member, 'consent'), method: :post, :class => 'dropdown-item' do
                    = I18n.t 'admin.member_account_status.send_consent_mail'

        - if @transactions.length > 0 || @member.checkout_cards.length > 0
          .card
            .card-header.input
              %i.fa.fa-fw.fa-shopping-cart
              = I18n.t('admin.navigation.checkout')

              .input-group#credit{ :data => { 'member_id' => @member.id }}
                .input-symbol
                  %span &euro;
                  %input#amount{ :type => 'number', :placeholder => number_to_currency(@member.checkout_balance.balance, :unit => '') }

                <!-- Containing this selector in a div fixes an
                overflow in Firefox, that doesn't occur in
                Chrome. See #203. -->
                #selector-container
                  %select#payment_method{ :required => true }
                    %option{:value => "Gepind"}= I18n.t('checkout.top_up.pin')
                    %option{:value => "Contant"}= I18n.t('checkout.top_up.cash')
                    %option{:value => "", :selected => "selected" }= "-"
                    %option{:value => "Verkoop"}= I18n.t('checkout.top_up.sale')

                %span.input-group-btn
                  %button.btn.btn-warning#upgrade-btn
                    = I18n.t('checkout.top_up.title')

            %table.table.table-striped#transactions
              %thead
                %tr
                  %th
                    = I18n.t('checkout.transactions.date')
                  %th
                    = I18n.t('checkout.transactions.price')
                  %th.d-none.d-sm-table-cell
                    = I18n.t('checkout.products.title')
              %tbody
                - @transactions.each do |transaction|
                  %tr
                    %td #{I18n.l transaction.created_at}
                    %td
                      = number_to_currency(transaction.price, :unit => 'â‚¬')
                      - if transaction.price > 0
                        %span.fa.fa-sort-asc.float-right{ :style => 'padding-up: 3px;'}
                      - else
                        %span.fa.fa-sort-desc.float-right

                    %td.d-none.d-sm-table-cell
                      = transaction.products
            .card-footer
              = render partial: 'layouts/partials/pagination', locals: {pagy: @pagination}


      .col-lg-6
        .card
          .card-header
            %i.fa.fa-fw.fa-users
            = I18n.t('admin.navigation.group')
          %table.table.table-striped
            %tbody
              - @member.groups.each do |group|
                %tr
                  %td= link_to group[ :name ], group_path( group[ :id ] )
                  %td= Date.years( group[ :years ].sort )

                  %td.d-none.d-sm-table-cell
                    - group[ :positions ].each do | position |
                      - position.each do | position, year |
                        - unless position.nil?
                          = link_to I18n.t(position, scope: 'activerecord.attributes.group.positions', default: position.capitalize ), group_path( group[ :id ], year: year ), :class => 'inline'


        .card
          .card-header.year
            %i.fa.fa-fw.fa-ticket-alt
            = I18n.t('admin.activities.title')
            = select_tag :year, options_for_select( @years, params['year'] )

          %table.table.table-striped.table-linked#participants
            %thead
              %tr
                %th
                  = I18n.t('admin.activities.single')
                %th
                  = I18n.t('admin.payment.price')
                %th.d-none.d-md-table-cell
                  = I18n.t('admin.payment.date')
                %th.d-none.d-sm-table-cell{ :style => 'text-align: center;' }
                  = I18n.t('admin.payment.paid')
            %tbody
              - @activities.each do |activity|
                %tr{ :class => ('red' unless activity.currency(@member).nil? || activity.currency(@member) == 0 || activity.participants.where(:member => @member).first.paid), :data => { :id => activity.participants.where(:member => @member).first.id, :'activities-id' => activity.id } }
                  %td= link_to "#{ activity.name }", activity

                  - if !activity.currency(@member).nil?
                    %td= link_to "#{number_to_currency(activity.currency(@member), :unit => 'â‚¬')}", activity
                  - else
                    %td= link_to '-', activity, :style => 'text-decoration: none;'

                  - if !activity.start_date.nil?
                    - if activity.end_date.nil?
                      %td.d-none.d-md-table-cell= link_to "#{I18n.l activity.start_date}", activity
                    - else
                      %td.d-none.d-md-table-cell= link_to "#{I18n.l activity.start_date} - #{I18n.l activity.end_date}", activity

                  %td.d-none.d-sm-table-cell.buttons
                    .btn-group{ :style => 'margin-top: 3px; margin-right:3px; float: right;', :class => ('disabled' unless current_user.admin?)}
                      - if activity.participants.where(:member => @member).first.paid
                        %button.btn.btn-primary.unpaid{ :class => ('d-none' if activity.currency(@member).nil? || activity.currency(@member) == 0 )}
                          %i.fa.fa-fw.fa-check
                      - else
                        %button.btn.btn-warning.paid{ :class => ('d-none' if activity.currency(@member).nil? || activity.currency(@member) == 0 )}
                          %i.fa.fa-fw.fa-times
                      %button.btn.btn-default.destroy
                        %i.fa.fa-fw.fa-trash

        .card
          .card-header
            = I18n.t('admin.sac.title')
            = link_to I18n.t("admin.sac.download"), member_sac_path(@member.id)
          %table.table.table-striped#sac
            %thead
              %tr
                %th= I18n.t('admin.activities.single')
                %th= I18n.t('admin.sac.category')
                %th= I18n.t('admin.sac.title')
            %tbody
              - total = 0
              - @activities.select{ |ac| ac.sac_category? or ac.participants.where(:member => @member).first.sac_points?}.each do |activity|
                %tr
                  - category = SAC_CATEGORIES.find {|c| c[:id] == activity.sac_category }
                  %td= link_to activity.name, activity
                  %td= category[:name] if activity.sac_category?
                  - user_points = activity.participants.where(:member => @member).first.sac_points
                  - points = [user_points, (activity.sac_category? and category[:points]), 0].find{ |n| n.present? }
                  - total += points if points.present?
                  %td= points
              %tr
                %td= I18n.t('admin.sac.total')
                %td
                %td= total

        .card
          .card-header
            %i.fa.fa-fw.fa-credit-card
            = I18n.t('admin.cards.cards')
          %table.table.table-striped#memberscards
            %tbody
              - @member.checkout_cards.each do |card|
                %tr{ :data => { :uuid => card.uuid, :member_id => @member.id, :active => card.active ? 1 : 0, :disabled => card.disabled ? 1 : 0 } }
                  %td= card.uuid
                  - if !card.active
                    %td.cardstatus.text-info= I18n.t('admin.cards.to_be_activated')
                  - elsif card.disabled
                    %td.cardstatus.text-muted= I18n.t('admin.cards.deactivated')
                  - else
                    %td.cardstatus= I18n.t('admin.cards.active')
                  %td
                    .btn-group
                      - if !card.active
                        %button.btn.btn-primary.activate
                          %i.fa.fa-check-circle
                          = I18n.t('admin.cards.activate')
                      - elsif card.disabled
                        %button.btn.btn-warning.reactivate
                          %i.fa.fa-sync-alt
                          = I18n.t('admin.cards.reactivate')
                      - else
                        %button.btn.btn-danger.deactivate
                          %i.fa.fa-trash
                          = I18n.t('admin.cards.deactivate')
