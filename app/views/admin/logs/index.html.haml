- content_for(:page, 'logs')
- content_for(:title, I18n.t('admin.navigation.impressions'))

%section#content

  .page.page-table
    %section.card.table-dynamic
      .table-responsive
        %table.table.table-bordered.table-striped
          %thead
            %tr
              %th
                .th
                  = I18n.t('admin.settings.date')
                  -#
                    %span.glyphicon.glyphicon-chevron-up
                    %span.glyphicon.glyphicon-chevron-down
              %th
                .th
                  = I18n.t('admin.settings.user')
              %th
                .th
                  = I18n.t('admin.settings.object')
                  -#
                    %span.glyphicon.glyphicon-chevron-up
                    %span.glyphicon.glyphicon-chevron-down
              %th
                .th
                  = I18n.t('admin.settings.action')
              %th
                .th
                  = I18n.t('admin.settings.address')

          - @impressions.each do |impression|
            %tr
              %td= I18n.l impression.created_at
              %td
                - if !impression.user_id.nil? && User.exists?(impression.user_id)
                  = User.find( impression.user_id ).email
              %td
                - if ['Member', 'Group', 'Activity'].include? impression.impressionable_type
                  - if impression.impressionable.nil? && !impression.message.nil?
                    = impression.message
                  - elsif !impression.impressionable.nil?
                    = link_to impression.impressionable.name, impression.impressionable

                - elsif 'Participant' == impression.impressionable_type && impression.impressionable_id
                  = link_to impression.impressionable.activity.name, impression.impressionable.activity, :class => 'inline'

                  - if impression.impressionable.member.present?
                    = link_to impression.impressionable.member.name, impression.impressionable.member, :class => 'inline'

                - elsif 'GroupMember' == impression.impressionable_type
                  = link_to impression.impressionable.group.name, impression.impressionable.group, :class => 'inline'

                  - if impression.impressionable.member.present?
                    = link_to impression.impressionable.member.name, impression.impressionable.member, :class => 'inline'
                - elsif impression.message
                  = impression.controller_name + ": " + impression.message
                - else
                  = impression.controller_name

              %td
                - if !impression.message.nil?
                  - if impression.impressionable_type == 'Participant'
                    - if impression.impressionable_id.nil?
                      = impression.message

                    - elsif impression.action_name == 'update'
                      = I18n.t impression.message, scope: [ :activerecord, :attributes, :impression, impression.impressionable_type.downcase, impression.action_name]

                    - else
                      = I18n.t impression.action_name, scope: [ :activerecord, :attributes, :impression, impression.impressionable_type.downcase], message: impression.message

                  - else
                    = impression.action_name + ": " + impression.message

                - else
                  - if impression.impressionable_type == 'Group' && !impression.impressionable.nil?
                    = I18n.t impression.action_name, scope: [ :activerecord, :attributes, :impression, impression.impressionable_type.downcase], category: "#{I18n.t impression.impressionable.category, scope: [ :activerecord, :attributes, :group, :categories]}"

                  - elsif impression.impressionable_type == 'GroupMember'
                    = I18n.t impression.action_name, scope: [ :activerecord, :attributes, :impression, impression.impressionable_type.downcase], name: "#{I18n.t impression.impressionable.group.category, scope: [ :activerecord, :attributes, :group, :members]}".downcase, position: "#{I18n.t impression.impressionable.position, scope: [ :activerecord, :attributes, :group, :positions]}".downcase
                  - else
                    = I18n.t impression.action_name, scope: [ :activerecord, :attributes, :impression, impression.impressionable_type.downcase]

              %td= impression.ip_address

      .card-footer
        = render partial: 'layouts/partials/pagination', locals: {pagy: @pagination}
